INCLUDE <OBJECT>.
BEGIN_DATA OBJECT. " Do not change.. DATA is generated
* only private members may be inserted into structure private
DATA:
" begin of private,
"   to declare private attributes remove comments and
"   insert private attributes here ...
" end of private,
  BEGIN OF KEY,
      GROUP LIKE PLKO-PLNNR,
      GROUPCOUNTER LIKE PLKO-PLNAL,
  END OF KEY.
END_DATA OBJECT. " Do not change.. DATA is generated


BEGIN_METHOD DISPLAY CHANGING CONTAINER.
  data: RETURN LIKE BAPIRET2 OCCURS 0.
  CALL FUNCTION 'ROUTING_DISPLAY'
    EXPORTING
*      MATERIALPLANT =
*      MATERIAL =
      GROUPCOUNTER = OBJECT-KEY-GROUPCOUNTER
      GROUP = OBJECT-KEY-GROUP
    TABLES
      RETURN = return
    EXCEPTIONS
      OTHERS = 01.
  CASE SY-SUBRC.
    WHEN 0.            " OK
    WHEN OTHERS.       " to be implemented
  ENDCASE.
  SWC_SET_TABLE CONTAINER 'Return' RETURN.
END_METHOD.

BEGIN_METHOD EXISTENCECHECK CHANGING CONTAINER.
DATA:
      VALIDFROM LIKE BAPI1012_TSK_C-VALID_FROM,
      VALIDTODATE LIKE BAPI1012_TSK_C-VALID_TO_DATE,
      RETURN LIKE BAPIRET2 OCCURS 0.
  SWC_GET_ELEMENT CONTAINER 'ValidFrom' VALIDFROM.
  SWC_GET_ELEMENT CONTAINER 'ValidToDate' VALIDTODATE.
  CALL FUNCTION 'BAPI_ROUTING_EXISTENCE_CHECK'
    EXPORTING
      VALIDTODATE = VALIDTODATE
      VALIDFROM = VALIDFROM
      GROUPCOUNTER = OBJECT-KEY-GROUPCOUNTER
      GROUP = OBJECT-KEY-GROUP
    TABLES
      RETURN = RETURN
    EXCEPTIONS
      OTHERS = 01.
  CASE SY-SUBRC.
    WHEN 0.            " OK
    WHEN OTHERS.       " to be implemented
  ENDCASE.
  SWC_SET_TABLE CONTAINER 'Return' RETURN.
END_METHOD.

BEGIN_METHOD CREATE CHANGING CONTAINER.
DATA:
      TESTRUN LIKE BAPIFLAG,
      PROFILE LIKE BAPI1012_CONTROL_DATA-PROFILE,
      BOMUSAGE LIKE BAPI1012_CONTROL_DATA-BOM_USAGE,
      APPLICATION LIKE BAPI1012_CONTROL_DATA-APPLICATION,
      TASK LIKE BAPI1012_TSK_C OCCURS 0,
      MATERIALTASKALLOCATION LIKE BAPI1012_MTK_C OCCURS 0,
      SEQUENCE LIKE BAPI1012_SEQ_C OCCURS 0,
      OPERATION LIKE BAPI1012_OPR_C OCCURS 0,
      SUBOPERATION LIKE BAPI1012_SUB_OPR_C OCCURS 0,
      REFERENCEOPERATION LIKE BAPI1012_REF_OPR_C OCCURS 0,
      WORKCENTERREFERENCE LIKE BAPI1012_WC_REF_OPR_C OCCURS 0,
      COMPONENTALLOCATION LIKE BAPI1012_COM_C OCCURS 0,
      PRODUCTIONRESOURCE LIKE BAPI1012_PRT_C OCCURS 0,
      INSPCHARACTERISTIC LIKE BAPI1012_CHA_C OCCURS 0,
      TEXTALLOCATION LIKE BAPI1012_TXT_HDR_C OCCURS 0,
      TEXT LIKE BAPI1012_TXT_C OCCURS 0,
      RETURN LIKE BAPIRET2 OCCURS 0.
  SWC_GET_ELEMENT CONTAINER 'TestRun' TESTRUN.
  IF SY-SUBRC <> 0.
    MOVE SPACE TO TESTRUN.
  ENDIF.
  SWC_GET_ELEMENT CONTAINER 'Profile' PROFILE.
  SWC_GET_ELEMENT CONTAINER 'BomUsage' BOMUSAGE.
  SWC_GET_ELEMENT CONTAINER 'Application' APPLICATION.
  SWC_GET_TABLE CONTAINER 'Task' TASK.
  SWC_GET_TABLE CONTAINER 'MaterialTaskAllocation'
       MATERIALTASKALLOCATION.
  SWC_GET_TABLE CONTAINER 'Sequence' SEQUENCE.
  SWC_GET_TABLE CONTAINER 'Operation' OPERATION.
  SWC_GET_TABLE CONTAINER 'SubOperation' SUBOPERATION.
  SWC_GET_TABLE CONTAINER 'ReferenceOperation' REFERENCEOPERATION.
  SWC_GET_TABLE CONTAINER 'WorkCenterReference' WORKCENTERREFERENCE.
  SWC_GET_TABLE CONTAINER 'ComponentAllocation' COMPONENTALLOCATION.
  SWC_GET_TABLE CONTAINER 'ProductionResource' PRODUCTIONRESOURCE.
  SWC_GET_TABLE CONTAINER 'InspCharacteristic' INSPCHARACTERISTIC.
  SWC_GET_TABLE CONTAINER 'TextAllocation' TEXTALLOCATION.
  SWC_GET_TABLE CONTAINER 'Text' TEXT.
  CALL FUNCTION 'BAPI_ROUTING_CREATE'
    EXPORTING
      APPLICATION = APPLICATION
      BOMUSAGE = BOMUSAGE
      PROFILE = PROFILE
      TESTRUN = TESTRUN
    IMPORTING
      GROUPCOUNTER = OBJECT-KEY-GROUPCOUNTER
      GROUP = OBJECT-KEY-GROUP
    TABLES
      COMPONENTALLOCATION = COMPONENTALLOCATION
      PRODUCTIONRESOURCE = PRODUCTIONRESOURCE
      INSPCHARACTERISTIC = INSPCHARACTERISTIC
      TEXTALLOCATION = TEXTALLOCATION
      TEXT = TEXT
      RETURN = RETURN
      WORKCENTERREFERENCE = WORKCENTERREFERENCE
      TASK = TASK
      MATERIALTASKALLOCATION = MATERIALTASKALLOCATION
      SEQUENCE = SEQUENCE
      OPERATION = OPERATION
      SUBOPERATION = SUBOPERATION
      REFERENCEOPERATION = REFERENCEOPERATION
    EXCEPTIONS
      OTHERS = 01.
  CASE SY-SUBRC.
    WHEN 0.            " OK
    WHEN OTHERS.       " to be implemented
  ENDCASE.
  SWC_SET_TABLE CONTAINER 'Return' RETURN.
END_METHOD.
